<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.openestate.tool.server</groupId>
  <artifactId>OpenEstate-Tool-Server</artifactId>
  <version>1.0-beta3</version>
  <packaging>jar</packaging>

  <name>OpenEstate-Tool-Server</name>
  <url>http://openestate.org</url>
  <organization>
    <name>OpenEstate</name>
    <url>http://openestate.org/</url>
  </organization>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.buildVersion>${project.version}</project.buildVersion>
    <project.launch4jVersion>1.0.0.0</project.launch4jVersion>
    <project.baseName>OpenEstate-ImmoServer</project.baseName>
    <project.javadocDir>${project.basedir}/javadoc</project.javadocDir>
    <project.releaseDir>${project.basedir}/release</project.releaseDir>
    <yajsw.version>stable-12.08</yajsw.version>
    <yajsw.download>https://netix.dl.sourceforge.net/project/yajsw/yajsw/yajsw-${yajsw.version}/yajsw-${yajsw.version}.zip</yajsw.download>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>annotations</artifactId>
      <version>3.0.1u2</version>
      <scope>compile</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk15on</artifactId>
      <version>1.56</version>
      <scope>compile</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-jdk15on</artifactId>
      <version>1.56</version>
      <scope>compile</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.5</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.5</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.googlecode.gettext-commons</groupId>
      <artifactId>gettext-commons</artifactId>
      <version>0.9.8</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>2.3.5</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.25</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.25</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>sqltool</artifactId>
      <version>2.3.5</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <!-- clean -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${project.releaseDir}</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>${project.javadocDir}</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <!-- compiler -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.6.1</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
          <showDeprecation>true</showDeprecation>
          <debug>false</debug>
        </configuration>
      </plugin>

      <!-- findbugs -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>3.0.4</version>
        <configuration>
          <failOnError>false</failOnError>
          <excludeFilterFile>${project.basedir}/findbugs-exclude.xml</excludeFilterFile>
        </configuration>
      </plugin>

      <!-- gettext / http://gettext-commons.googlecode.com/svn/maven2-plugins-site/plugin-info.html -->
      <plugin>
        <groupId>com.googlecode.gettext-commons</groupId>
        <artifactId>gettext-maven-plugin</artifactId>
        <version>1.2.4</version>
        <configuration>
          <targetBundle>org.openestate.tool.server.resources.Messages</targetBundle>
          <poDirectory>${project.basedir}/src/main/i18n</poDirectory>
          <outputDirectory>${project.basedir}/src/main/resources</outputDirectory>
          <outputFormat>class</outputFormat>

          <!-- set path to the gettext utilities, if they are not found automatically -->
          <!--
          <msgcatCmd>msgcat</msgcatCmd>
          <msgfmtCmd>msgfmt</msgfmtCmd>
          <msgmergeCmd>msgmerge</msgmergeCmd>
          <xgettextCmd>xgettext</xgettextCmd>
          -->
        </configuration>
        <executions>
          <execution>
            <id>i18n-generate-bundle</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>dist</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- source -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.0.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
            <!--
            <configuration>
              <skipSource>${release.skip}</skipSource>
            </configuration>
            -->
          </execution>
        </executions>
      </plugin>

      <!-- javadoc -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.10.4</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <quiet>true</quiet>
              <skip>${release.skip}</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- antrun -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>prepare-runtime</id>
            <phase>${release.preparePhase}</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <mkdir dir="${project.build.directory}/runtime"/>
                <mkdir dir="${project.build.directory}/runtime/bin"/>

                <!-- download yajsw -->
                <get src="${yajsw.download}" dest="${project.basedir}/share/yajsw"
                     skipexisting="true" verbose="false" />

                <!-- extract yajsw -->
                <delete dir="${project.basedir}/share/yajsw/pkg" />
                <unzip src="${project.basedir}/share/yajsw/yajsw-${yajsw.version}.zip"
                       dest="${project.basedir}/share/yajsw/pkg" />

                <!-- copy yajsw into runtime -->
                <copy todir="${project.build.directory}/runtime/var/wrapper"
                      file="${project.basedir}/share/yajsw/pkg/yajsw-${yajsw.version}/wrapper.jar" />
                <copy todir="${project.build.directory}/runtime/var/wrapper"
                      file="${project.basedir}/share/yajsw/pkg/yajsw-${yajsw.version}/wrapperApp.jar" />
                <copy tofile="${project.build.directory}/runtime/doc/licenses/yajsw.license.txt"
                      file="${project.basedir}/share/yajsw/pkg/yajsw-${yajsw.version}/LICENSE.txt" />
                <copy tofile="${project.build.directory}/runtime/doc/sources/yajsw-${yajsw.version}.zip"
                      file="${project.basedir}/share/yajsw/pkg/yajsw-${yajsw.version}/src/src.zip" />
                <copy todir="${project.build.directory}/runtime/var/wrapper/lib">
                  <fileset dir="${project.basedir}/share/yajsw/pkg/yajsw-${yajsw.version}/lib" />
                </copy>
                <copy todir="${project.build.directory}/runtime/doc/wrapper">
                  <fileset dir="${project.basedir}/share/yajsw/pkg/yajsw-${yajsw.version}/doc" />
                </copy>

              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- dependencies -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>copy-dependency-sources</id>
            <phase>${release.preparePhase}</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <skip>${release.skip}</skip>
              <silent>true</silent>
              <classifier>sources</classifier>
              <outputDirectory>${project.build.directory}/runtime/doc/sources</outputDirectory>
              <excludeGroupIds>com.google.code.findbugs,net.jcip</excludeGroupIds>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
          <execution>
            <id>copy-dependency-javadoc</id>
            <phase>${release.preparePhase}</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <skip>${release.skip}</skip>
              <silent>true</silent>
              <classifier>javadoc</classifier>
              <outputDirectory>${project.build.directory}/runtime/doc/javadoc</outputDirectory>
              <excludeGroupIds>com.google.code.findbugs,net.jcip</excludeGroupIds>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- launch4j -->
      <plugin>
        <!--
        <groupId>org.bluestemsoftware.open.maven.plugin</groupId>
        <artifactId>launch4j-plugin</artifactId>
        -->
        <groupId>com.akathist.maven.plugins.launch4j</groupId>
        <artifactId>launch4j-maven-plugin</artifactId>
        <version>1.7.16</version>
        <executions>

          <!-- Start.exe -->
          <execution>
            <id>launch4j-Start</id>
            <phase>${release.preparePhase}</phase>
            <goals>
              <goal>launch4j</goal>
            </goals>
            <configuration>
              <outfile>${project.build.directory}/runtime/bin/Start.exe</outfile>
              <icon>${project.basedir}/share/icons/ImmoServer.ico</icon>
              <dontWrapJar>true</dontWrapJar>
              <jar>.</jar>
              <chdir>..</chdir>
              <cmdLine></cmdLine>
              <classPath>
                <mainClass>org.openestate.tool.server.Server</mainClass>
                <addDependencies>false</addDependencies>
                <preCp>etc\;lib\*.jar</preCp>
              </classPath>
              <jre>
                <minVersion>1.7.0</minVersion>
                <!--
                <opts>
                  <opt>-Dapp.basedir=.</opt>
                  <opt>-Dapp.launcher=ImmoTool.exe</opt>
                  <opt>-Djpf.boot.config=etc/boot.gui.properties</opt>
                </opts>
                -->
              </jre>
              <headerType>gui</headerType>
              <priority>normal</priority>
              <customProcName>false</customProcName>
              <stayAlive>false</stayAlive>
              <singleInstance>
                <mutexName>OpenEstate-ImmoServer</mutexName>
                <windowTitle>OpenEstate-ImmoServer</windowTitle>
              </singleInstance>
              <downloadUrl>https://www.java.com/de/download/manual.jsp</downloadUrl>
              <supportUrl>http://openestate.org</supportUrl>
              <versionInfo>
                <copyright>OpenEstate.org</copyright>
                <productName>OpenEstate-ImmoServer</productName>
                <internalName>ImmoServer</internalName>
                <originalFilename>Start.exe</originalFilename>
                <fileDescription>OpenEstate-ImmoServer</fileDescription>
                <fileVersion>${project.launch4jVersion}</fileVersion>
                <txtFileVersion>${project.buildVersion}</txtFileVersion>
                <productVersion>${project.launch4jVersion}</productVersion>
                <txtProductVersion>${project.buildVersion}</txtProductVersion>
              </versionInfo>
            </configuration>
          </execution>

          <!-- ManagerConsole.exe -->
          <execution>
            <id>launch4j-ManagerBackup</id>
            <phase>${release.preparePhase}</phase>
            <goals>
              <goal>launch4j</goal>
            </goals>
            <configuration>
              <outfile>${project.build.directory}/runtime/bin/ManagerConsole.exe</outfile>
              <icon>${project.basedir}/share/icons/ImmoServer-Console.ico</icon>
              <dontWrapJar>true</dontWrapJar>
              <jar>.</jar>
              <chdir>..</chdir>
              <cmdLine></cmdLine>
              <classPath>
                <mainClass>org.hsqldb.cmdline.SqlTool</mainClass>
                <addDependencies>false</addDependencies>
                <preCp>etc\;lib\*.jar</preCp>
              </classPath>
              <jre>
                <minVersion>1.7.0</minVersion>
                <!--
                <opts>
                  <opt>-Dapp.basedir=.</opt>
                  <opt>-Dapp.launcher=ImmoTool.exe</opt>
                  <opt>-Djpf.boot.config=etc/boot.gui.properties</opt>
                </opts>
                -->
              </jre>
              <headerType>console</headerType>
              <priority>normal</priority>
              <customProcName>false</customProcName>
              <stayAlive>false</stayAlive>
              <singleInstance>
                <mutexName>OpenEstate-ImmoServer-Console</mutexName>
                <windowTitle>OpenEstate-ImmoServer-Console</windowTitle>
              </singleInstance>
              <downloadUrl>https://www.java.com/de/download/manual.jsp</downloadUrl>
              <supportUrl>http://openestate.org</supportUrl>
              <versionInfo>
                <copyright>OpenEstate.org</copyright>
                <productName>OpenEstate-ImmoServer-Console</productName>
                <internalName>ImmoServer-Console</internalName>
                <originalFilename>ManagerConsole.exe</originalFilename>
                <fileDescription>OpenEstate-ImmoServer-Console</fileDescription>
                <fileVersion>${project.launch4jVersion}</fileVersion>
                <txtFileVersion>${project.buildVersion}</txtFileVersion>
                <productVersion>${project.launch4jVersion}</productVersion>
                <txtProductVersion>${project.buildVersion}</txtProductVersion>
              </versionInfo>
            </configuration>
          </execution>

          <!-- ManagerTool.exe -->
          <execution>
            <id>launch4j-ManagerTool</id>
            <phase>${release.preparePhase}</phase>
            <goals>
              <goal>launch4j</goal>
            </goals>
            <configuration>
              <outfile>${project.build.directory}/runtime/bin/ManagerTool.exe</outfile>
              <icon>${project.basedir}/share/icons/ImmoServer-GUI.ico</icon>
              <dontWrapJar>true</dontWrapJar>
              <jar>.</jar>
              <chdir>..</chdir>
              <cmdLine></cmdLine>
              <classPath>
                <mainClass>org.hsqldb.util.DatabaseManagerSwing</mainClass>
                <addDependencies>false</addDependencies>
                <preCp>etc\;lib\*.jar</preCp>
              </classPath>
              <jre>
                <minVersion>1.7.0</minVersion>
                <!--
                <opts>
                  <opt>-Dapp.basedir=.</opt>
                  <opt>-Dapp.launcher=ImmoTool.exe</opt>
                  <opt>-Djpf.boot.config=etc/boot.gui.properties</opt>
                </opts>
                -->
              </jre>
              <headerType>gui</headerType>
              <priority>normal</priority>
              <customProcName>false</customProcName>
              <stayAlive>false</stayAlive>
              <singleInstance>
                <mutexName>OpenEstate-ImmoServer-Manager</mutexName>
                <windowTitle>OpenEstate-ImmoServer-Manager</windowTitle>
              </singleInstance>
              <downloadUrl>https://www.java.com/de/download/manual.jsp</downloadUrl>
              <supportUrl>http://openestate.org</supportUrl>
              <versionInfo>
                <copyright>OpenEstate.org</copyright>
                <productName>OpenEstate-ImmoServer-Manager</productName>
                <internalName>ImmoServer-Manager</internalName>
                <originalFilename>ManagerTool.exe</originalFilename>
                <fileDescription>OpenEstate-ImmoServer-Manager</fileDescription>
                <fileVersion>${project.launch4jVersion}</fileVersion>
                <txtFileVersion>${project.buildVersion}</txtFileVersion>
                <productVersion>${project.launch4jVersion}</productVersion>
                <txtProductVersion>${project.buildVersion}</txtProductVersion>
              </versionInfo>
            </configuration>
          </execution>

          <!-- SslInit.exe -->
          <execution>
            <id>launch4j-SslInit</id>
            <phase>${release.preparePhase}</phase>
            <goals>
              <goal>launch4j</goal>
            </goals>
            <configuration>
              <outfile>${project.build.directory}/runtime/bin/SslInit.exe</outfile>
              <icon>${project.basedir}/share/icons/ImmoServer-Console.ico</icon>
              <dontWrapJar>true</dontWrapJar>
              <jar>.</jar>
              <chdir>..</chdir>
              <cmdLine></cmdLine>
              <classPath>
                <mainClass>org.openestate.tool.server.utils.SslGenerator</mainClass>
                <addDependencies>false</addDependencies>
                <preCp>etc\;lib\*.jar</preCp>
              </classPath>
              <jre>
                <minVersion>1.7.0</minVersion>
                <!--
                <opts>
                  <opt>-Dapp.basedir=.</opt>
                  <opt>-Dapp.launcher=ImmoTool.exe</opt>
                  <opt>-Djpf.boot.config=etc/boot.gui.properties</opt>
                </opts>
                -->
              </jre>
              <headerType>console</headerType>
              <priority>normal</priority>
              <customProcName>false</customProcName>
              <stayAlive>false</stayAlive>
              <singleInstance>
                <mutexName>OpenEstate-ImmoServer-SSL-Init</mutexName>
                <windowTitle>OpenEstate-ImmoServer-SSL-Init</windowTitle>
              </singleInstance>
              <downloadUrl>https://www.java.com/de/download/manual.jsp</downloadUrl>
              <supportUrl>http://openestate.org</supportUrl>
              <versionInfo>
                <copyright>OpenEstate.org</copyright>
                <productName>OpenEstate-ImmoServer-SSL-Init</productName>
                <internalName>SSL-Init</internalName>
                <originalFilename>SslInit.exe</originalFilename>
                <fileDescription>OpenEstate-ImmoServer-SSL-Init</fileDescription>
                <fileVersion>${project.launch4jVersion}</fileVersion>
                <txtFileVersion>${project.buildVersion}</txtFileVersion>
                <productVersion>${project.launch4jVersion}</productVersion>
                <txtProductVersion>${project.buildVersion}</txtProductVersion>
              </versionInfo>
            </configuration>
          </execution>

        </executions>
      </plugin>

      <!-- assembly -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>release</id>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>${release.installPhase}</phase>
            <configuration>
              <finalName>${project.baseName}-${project.version}-release</finalName>
              <outputDirectory>${project.releaseDir}</outputDirectory>
              <appendAssemblyId>false</appendAssemblyId>
              <!--<attach>false</attach>-->
              <!--<useAllReactorProjects>true</useAllReactorProjects>-->
              <tarLongFileMode>posix</tarLongFileMode>
              <descriptors>
                <descriptor>assembly.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <profiles>

    <!-- development profile -->
    <profile>
      <id>development</id>
      <properties>
        <createChecksum>true</createChecksum>
        <release.installPhase></release.installPhase>
        <release.preparePhase></release.preparePhase>
        <release.skip>true</release.skip>
      </properties>
    </profile>

    <!-- release profile -->
    <profile>
      <id>release</id>
      <properties>
        <createChecksum>true</createChecksum>
        <release.installPhase>install</release.installPhase>
        <release.preparePhase>prepare-package</release.preparePhase>
        <release.skip>false</release.skip>
      </properties>
    </profile>

  </profiles>
</project>
